@page "/"
@using BlazorMonaco
@using BlazorMonaco.Bridge

@inject IJSRuntime JsRuntime

<Alert />

<div class="hidden-for-alert"></div>

<div class="vh-100 mt-4 header-line">
    <div class="row mb-2">
        <div class="col-12 col-md-6 justify-content-center">
            <h4>Azure Config file</h4>
        </div>
        <div class="col-12 col-md-6 justify-content-center">
            <button @onclick="ClipboardClicked" class="btn btn-secondary btn-lg">
              <i class="oi oi-clipboard mr-2"></i>Clipboard</button>
        </div>
    </div>

    <div class="row h-100 mb-3">
      <div class="col-12 col-md-6">
          <MonacoEditor OnDidPaste="OnPasted" @ref="_editor" Id="input-editor" CssClass="h-100 rounded" ConstructionOptions="InputOptions"/>
      </div>
      <div class="col-12 col-md-6">
          <MonacoEditor @ref="_output" Id="output-editor" CssClass="h-100 rounded" ConstructionOptions="OutputOptions"/>
      </div>
    </div>

    <Footer/>
</div>




@code {

    MonacoEditor _editor;
    MonacoEditor _output;

    private async Task ClipboardClicked()
    {
        await JsRuntime.InvokeAsync<string>("Clipboard.copyToClipboard", await _output.GetValue());
    }
    private StandaloneEditorConstructionOptions OutputOptions(MonacoEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            Language = "json",
            Value = "",
            Theme = "vs-dark",
            AutomaticLayout = true,
            AutoIndent = true,
            ScrollBeyondLastLine = false,
            ScrollBeyondLastColumn = 0,
            ReadOnly = true
        };
    }

    private StandaloneEditorConstructionOptions InputOptions(MonacoEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            Language = "json",
            Value = "// paste your Azure Configuration json\n" +
                    "// Appservice -> Configuration -> Advenced Edit\n" + 
                    "// Copy the config json and paste here to get appsettings.json",
            Theme = "vs-dark",
            AutomaticLayout = true,
            FormatOnPaste = true,
            FormatOnType = true,
            AutoIndent = true,
            CodeLens = true,
            ScrollBeyondLastLine = false,
            ScrollBeyondLastColumn = 0
        };
    }

    static DateTime firstCall = DateTime.Now;
    private async Task OnPasted(PasteEvent e)
    {
        var elapsingSeconds = (DateTime.Now - firstCall).TotalSeconds;
        firstCall = DateTime.Now;
        if(elapsingSeconds > 1)
        {
            var value = "";
            value = await JsRuntime.InvokeAsync<string>("jsonConvertor.convert", await _editor.GetValue());
            await _output.SetValue(value);   
        }

    }
}